"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"code":{"type":"string"},"pattern":{"type":"string"},"theme":{"type":"object","properties":{"textColor":{"type":"string","pattern":"^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$"},"backgroundColor":{"type":"string","pattern":"^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$"}},"required":["textColor","backgroundColor"],"additionalProperties":false},"version":{"const":1}},"required":["id","name","code","theme","version"],"additionalProperties":false};const pattern0 = new RegExp("^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$", "u");const func0 = require("ajv/dist/runtime/equal").default;function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((data.id === undefined) && (missing0 = "id")) || ((data.name === undefined) && (missing0 = "name"))) || ((data.code === undefined) && (missing0 = "code"))) || ((data.theme === undefined) && (missing0 = "theme"))) || ((data.version === undefined) && (missing0 = "version"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((((key0 === "id") || (key0 === "name")) || (key0 === "code")) || (key0 === "pattern")) || (key0 === "theme")) || (key0 === "version"))){validate20.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.id !== undefined){const _errs2 = errors;if(typeof data.id !== "string"){validate20.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs4 = errors;if(typeof data.name !== "string"){validate20.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs6 = errors;if(typeof data.code !== "string"){validate20.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.pattern !== undefined){const _errs8 = errors;if(typeof data.pattern !== "string"){validate20.errors = [{instancePath:instancePath+"/pattern",schemaPath:"#/properties/pattern/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.theme !== undefined){let data4 = data.theme;const _errs10 = errors;if(errors === _errs10){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing1;if(((data4.textColor === undefined) && (missing1 = "textColor")) || ((data4.backgroundColor === undefined) && (missing1 = "backgroundColor"))){validate20.errors = [{instancePath:instancePath+"/theme",schemaPath:"#/properties/theme/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs12 = errors;for(const key1 in data4){if(!((key1 === "textColor") || (key1 === "backgroundColor"))){validate20.errors = [{instancePath:instancePath+"/theme",schemaPath:"#/properties/theme/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs12 === errors){if(data4.textColor !== undefined){let data5 = data4.textColor;const _errs13 = errors;if(errors === _errs13){if(typeof data5 === "string"){if(!pattern0.test(data5)){validate20.errors = [{instancePath:instancePath+"/theme/textColor",schemaPath:"#/properties/theme/properties/textColor/pattern",keyword:"pattern",params:{pattern: "^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$"},message:"must match pattern \""+"^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/theme/textColor",schemaPath:"#/properties/theme/properties/textColor/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs13 === errors;}else {var valid1 = true;}if(valid1){if(data4.backgroundColor !== undefined){let data6 = data4.backgroundColor;const _errs15 = errors;if(errors === _errs15){if(typeof data6 === "string"){if(!pattern0.test(data6)){validate20.errors = [{instancePath:instancePath+"/theme/backgroundColor",schemaPath:"#/properties/theme/properties/backgroundColor/pattern",keyword:"pattern",params:{pattern: "^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$"},message:"must match pattern \""+"^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/theme/backgroundColor",schemaPath:"#/properties/theme/properties/backgroundColor/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs15 === errors;}else {var valid1 = true;}}}}}else {validate20.errors = [{instancePath:instancePath+"/theme",schemaPath:"#/properties/theme/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs17 = errors;if(!func0(data.version, 1)){validate20.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 1},message:"must be equal to constant"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}